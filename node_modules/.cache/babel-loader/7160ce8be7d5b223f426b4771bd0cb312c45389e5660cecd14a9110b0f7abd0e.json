{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/reiz_tech_task/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Pagination from \"./components/Pagination\";\nimport Filters from \"./components/Filters\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [allCountries, setAllCountries] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesPerPage, setCountriesPerPage] = useState(20);\n  const [error, setError] = useState(null);\n  const [sortingOption, setSortingOption] = useState(\"\");\n  const [filterValues, setFilterValues] = useState([]);\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await axios.get(\"https://restcountries.com/v2/all?fields=name,region,area\");\n        setCountries(response.data);\n        setAllCountries(response.data);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchCountries();\n  }, []);\n  useEffect(() => {\n    if (sortingOption === \"Ascending(A-Z)\") {\n      const countriesAsc = [...countries].sort((prev, next) => prev.name > next.name ? 1 : -1);\n      setCountries(countriesAsc);\n    } else if (sortingOption === \"Descending(Z-A)\") {\n      const countriesDesc = [...countries].sort((prev, next) => prev.name > next.name ? -1 : 1);\n      setCountries(countriesDesc);\n    }\n  }, [sortingOption]);\n  if (filterValues.includes(\"smLithuania\")) {}\n  const lastPostIndex = currentPage * countriesPerPage;\n  const firstPostIndex = lastPostIndex - countriesPerPage;\n  const currentCountries = countries.slice(firstPostIndex, lastPostIndex);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"An error occurred: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Filters, {\n      sortingOption: sortingOption,\n      setSortingOption: setSortingOption,\n      filterValues: filterValues,\n      setFilterValues: setFilterValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Country Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Area\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentCountries.map((country, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: (currentPage - 1) * countriesPerPage + index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: country.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: country.region\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: country.area\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalCountries: countries.length,\n      countriesPerPage: countriesPerPage,\n      setCurrentPage: setCurrentPage,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QY7IyPUgeeICMlF0UOqittKV9mM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","Filters","axios","jsxDEV","_jsxDEV","App","_s","countries","setCountries","allCountries","setAllCountries","currentPage","setCurrentPage","countriesPerPage","setCountriesPerPage","error","setError","sortingOption","setSortingOption","filterValues","setFilterValues","fetchCountries","response","get","data","countriesAsc","sort","prev","next","name","countriesDesc","includes","lastPostIndex","firstPostIndex","currentCountries","slice","children","message","fileName","_jsxFileName","lineNumber","columnNumber","className","map","country","index","region","area","totalCountries","length","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/reiz_tech_task/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Pagination from \"./components/Pagination\";\nimport Filters from \"./components/Filters\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [allCountries, setAllCountries] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesPerPage, setCountriesPerPage] = useState(20);\n  const [error, setError] = useState(null);\n  const [sortingOption, setSortingOption] = useState(\"\");\n  const [filterValues, setFilterValues] = useState([]);\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      try {\n        const response = await axios.get(\n          \"https://restcountries.com/v2/all?fields=name,region,area\"\n        );\n        setCountries(response.data);\n        setAllCountries(response.data);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    fetchCountries();\n  }, []);\n\n  useEffect(() => {\n    if (sortingOption === \"Ascending(A-Z)\") {\n      const countriesAsc = [...countries].sort((prev, next) =>\n        prev.name > next.name ? 1 : -1\n      );\n      setCountries(countriesAsc);\n    } else if (sortingOption === \"Descending(Z-A)\") {\n      const countriesDesc = [...countries].sort((prev, next) =>\n        prev.name > next.name ? -1 : 1\n      );\n      setCountries(countriesDesc);\n    }\n  }, [sortingOption]);\n\n  if(filterValues.includes(\"smLithuania\")) {\n    \n  }\n\n  const lastPostIndex = currentPage * countriesPerPage;\n  const firstPostIndex = lastPostIndex - countriesPerPage;\n  const currentCountries = countries.slice(firstPostIndex, lastPostIndex);\n\n  if (error) {\n    return <p>An error occurred: {error.message}</p>;\n  }\n\n  return (\n    <div className=\"app\">\n      <Filters\n        sortingOption={sortingOption}\n        setSortingOption={setSortingOption}\n        filterValues={filterValues}\n        setFilterValues={setFilterValues}\n      />\n      <div className=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Country Name</th>\n              <th>Region</th>\n              <th>Area</th>\n            </tr>\n          </thead>\n          <tbody>\n            {currentCountries.map((country, index) => {\n              return (\n                <tr key={index}>\n                  <td>{(currentPage - 1) * countriesPerPage + index + 1}</td>\n                  <td>{country.name}</td>\n                  <td>{country.region}</td>\n                  <td>{country.area}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <Pagination\n        totalCountries={countries.length}\n        countriesPerPage={countriesPerPage}\n        setCurrentPage={setCurrentPage}\n        currentPage={currentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}